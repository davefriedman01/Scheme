;;;;;;;;;;;;;;;;;;;;
;
; Exercise 1.1
;
;;;;;;;;;;;;;;;;;;;;

10        ; 10
(+ 5 3 4) ; 12
(- 9 1)   ; 8
(/ 6 2)   ; 3

  (+ (* 2 4)
     (- 4 6))
; (+ 8 -2)
; 6

(define a 3) ;
a            ; 3

(define b (+ a 1)) ;
b                  ; 4

(+ a
   b
   (* a b))
; (+ 3 4 12)
; 19

(= a b) ; #f

(if (and (> b a)
         (< b (* a b)))
    b
    a)
; (if (and (> 4 3) (< 4 (* 3 4))) 4 3)
; (if (and #t (< 4 12)) 4 3)
; (if (and #t #t) 4 3)
; 4

(cond ((= a 4) 6)
      ((= b 4) (+ 6 7 a))
      (else 25))
; (cond ((= 3 4) 6)
;       ((= 4 4) (+ 6 7 3))
;       (else 25))
; 16

(+ 2 (if (> b a) b a))
; (+ 2 (if (> 4 3) 4 3))
; (+ 2 4)
; 6

(* (cond ((> a b) a)
         ((< a b) b)
         (else -1))
    (+ a 1))
; (* (cond ((> 3 4) 3)
;          ((< 3 4) 4)
;          (else -1))
;    (+ 3 1))
;
; (* 4 (+ 3 1))
; (* 4 4)
; 16

;;;;;;;;;;;;;;;;;;;;
;
; Exercise 1.2
;
;;;;;;;;;;;;;;;;;;;;
;
; (5 + 4 + (2 - (3 - (6 + 4/5)))) / (3 * (6 - 2) * (2 - 7))
; (5 + 4 + (2 - (3 - (+ 6 4/5)))) / (3 * (- 6 2) * (- 2 7))
; (5 + 4 + (2 - (- 3 (+ 6 4/5)))) / (3 * (* (- 6 2) (- 2 7)))
; (5 + 4 + (- 2 (- 3 (+ 6 4/5)))) / (* 3 (* (- 6 2) (- 2 7)))
; (5 + (+ 4 (- 2 (- 3 (+ 6 4/5))))) / (* 3 (* (- 6 2) (- 2 7)))
; (+ 5 (+ 4 (- 2 (- 3 (+ 6 4/5))))) / (* 3 (* (- 6 2) (- 2 7)))
; (/ (+ 5 (+ 4 (- 2 (- 3 (+ 6 4/5))))) (* 3 (* (- 6 2) (- 2 7))))
;
; (/ (+ 5
;       (+ 4
;          (- 2
;             (- 3
;                (+ 6 4/5)))))
;    (* 3
;       (* (- 6 2)
;          (- 2 7))))
;
; (/ (+ 5
;       (+ 4
;          (- 2
;             (- 3 6.8))))
;    (* 3
;       (* 4 -5)))
;
; (/ (+ 5
;       (+ 4
;          (- 2 -3.8)))
;    (* 3 -20))
;
; (/ (+ 5
;       (+ 4 5.8))
;    -60)
;
; (/ (+ 5 9.8)
;    -60)
;
; (/ 14.8 -60)
;
; -37/150

;;;;;;;;;;;;;;;;;;;;
;
; Exercise 1.3
;
;;;;;;;;;;;;;;;;;;;;

(define (square x) (* x x))

(define (sum-of-squares x y)
  (+ (square x) (square y)))

(define (sum-of-two-largest-squares a b c)
  (cond ((> a b) (if (> b c) (sum-of-squares a b) (sum-of-squares a c)))
        (else    (if (> a c) (sum-of-squares a b) (sum-of-squares b c)))))
; (sum-of-two-largest-squares 1 2 3) ; 13
; (sum-of-two-largest-squares 1 3 5) ; 34
; (sum-of-two-largest-squares 9 7 5) ; 130

;;;;;;;;;;;;;;;;;;;;
;
; Exercise 1.4
;
;;;;;;;;;;;;;;;;;;;;

(define (a-plus-abs-b a b)
  ((if (> b 0) + -) a b))

;;;;;;;;;;;;;;;;;;;;
;
; Exercise 1.5
;
;;;;;;;;;;;;;;;;;;;;

(define (p) (p))

(define (test x y)
  (if (= x 0) 0 y))

(test 0 (p))